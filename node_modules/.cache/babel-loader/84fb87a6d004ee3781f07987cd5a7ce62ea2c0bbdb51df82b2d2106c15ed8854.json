{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\cp\\\\customer-portal\\\\src\\\\components\\\\Documents\\\\Documents.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Documents = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [previewList, setPreviewList] = useState([]);\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(prev => [...prev, ...selectedFiles]);\n    const previews = selectedFiles.map(file => ({\n      name: file.name,\n      size: file.size,\n      type: file.type\n    }));\n    setPreviewList(prev => [...prev, ...previews]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (files.length === 0) {\n      alert('Please upload at least one document.');\n      return;\n    }\n\n    // Normally you'd send these to a server here\n    console.log('Submitting documents:', files);\n\n    // Example: Use FormData for actual API upload\n    // const formData = new FormData();\n    // files.forEach(file => formData.append('documents', file));\n    // axios.post('/upload-endpoint', formData)\n\n    alert('Documents submitted!');\n  };\n  const handleClear = () => {\n    setFiles([]);\n    setPreviewList([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '40px auto',\n      padding: '20px',\n      background: '#fff',\n      borderRadius: '8px',\n      boxShadow: '0 0 10px rgba(0,0,0,0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Required Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please upload documents such as:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Proof of identity (e.g., driver's license, ID card)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Proof of income (e.g., pay stub, tax return)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Proof of residence (e.g., utility bill)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \".pdf,.jpg,.jpeg,.png\",\n        onChange: handleFileChange,\n        style: {\n          marginTop: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), previewList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Selected Files:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: previewList.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [file.name, \" (\", Math.round(file.size / 1024), \" KB)\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleClear,\n          style: {\n            marginTop: '10px'\n          },\n          children: \"Clear Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginTop: '20px',\n          padding: '10px 20px',\n          backgroundColor: '#0072CE',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Submit Documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Documents, \"NDC2G6gNEOc9ZZLMnb9Wn7osIKU=\");\n_c = Documents;\nexport default Documents;\nvar _c;\n$RefreshReg$(_c, \"Documents\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Documents","_s","files","setFiles","previewList","setPreviewList","handleFileChange","e","selectedFiles","Array","from","target","prev","previews","map","file","name","size","type","handleSubmit","preventDefault","length","alert","console","log","handleClear","style","maxWidth","margin","padding","background","borderRadius","boxShadow","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","multiple","accept","onChange","marginTop","index","Math","round","onClick","backgroundColor","color","border","cursor","_c","$RefreshReg$"],"sources":["D:/projects/cp/customer-portal/src/components/Documents/Documents.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Documents = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [previewList, setPreviewList] = useState([]);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    setFiles(prev => [...prev, ...selectedFiles]);\r\n\r\n    const previews = selectedFiles.map(file => ({\r\n      name: file.name,\r\n      size: file.size,\r\n      type: file.type\r\n    }));\r\n\r\n    setPreviewList(prev => [...prev, ...previews]);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (files.length === 0) {\r\n      alert('Please upload at least one document.');\r\n      return;\r\n    }\r\n\r\n    // Normally you'd send these to a server here\r\n    console.log('Submitting documents:', files);\r\n\r\n    // Example: Use FormData for actual API upload\r\n    // const formData = new FormData();\r\n    // files.forEach(file => formData.append('documents', file));\r\n    // axios.post('/upload-endpoint', formData)\r\n\r\n    alert('Documents submitted!');\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setFiles([]);\r\n    setPreviewList([]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '600px', margin: '40px auto', padding: '20px', background: '#fff', borderRadius: '8px', boxShadow: '0 0 10px rgba(0,0,0,0.1)' }}>\r\n      <h2>Upload Required Documents</h2>\r\n      <p>Please upload documents such as:</p>\r\n      <ul>\r\n        <li>Proof of identity (e.g., driver's license, ID card)</li>\r\n        <li>Proof of income (e.g., pay stub, tax return)</li>\r\n        <li>Proof of residence (e.g., utility bill)</li>\r\n      </ul>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"file\"\r\n          multiple\r\n          accept=\".pdf,.jpg,.jpeg,.png\"\r\n          onChange={handleFileChange}\r\n          style={{ marginTop: '10px' }}\r\n        />\r\n\r\n        {previewList.length > 0 && (\r\n          <div style={{ marginTop: '20px' }}>\r\n            <h4>Selected Files:</h4>\r\n            <ul>\r\n              {previewList.map((file, index) => (\r\n                <li key={index}>{file.name} ({Math.round(file.size / 1024)} KB)</li>\r\n              ))}\r\n            </ul>\r\n            <button type=\"button\" onClick={handleClear} style={{ marginTop: '10px' }}>\r\n              Clear Files\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <button type=\"submit\" style={{ marginTop: '20px', padding: '10px 20px', backgroundColor: '#0072CE', color: '#fff', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>\r\n          Submit Documents\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Documents;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}